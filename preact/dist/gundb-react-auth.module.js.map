{"version":3,"file":"gundb-react-auth.module.js","sources":["../../node_modules/.pnpm/registry.npmjs.org/@altrx/gundb-react-hooks/0.8.1_react-dom@16.13.1+react@16.13.1/node_modules/@altrx/gundb-react-hooks/dist/gundb-react-hooks.umd.js","../../src/index.tsx"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) :\n  (global = global || self, factory(global['@altrx/gundb-react-hooks'] = {}, global.react));\n}(this, (function (exports, react) {\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  var encryptData = function encryptData(data, keys, sea) {\n    try {\n      return Promise.resolve(keys && sea ? sea.encrypt(data, keys) : data);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var decryptData = function decryptData(data, keys, sea) {\n    try {\n      return Promise.resolve(keys && sea ? sea.decrypt(data, keys) : data);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var debouncedUpdates = function debouncedUpdates(dispatcher, timeout) {\n    if (timeout === void 0) {\n      timeout = 100;\n    }\n\n    var updates = [];\n    var handler;\n    return function (update) {\n      updates.push(update);\n\n      if (!handler) {\n        handler = setTimeout(function () {\n          var newStateSlice = updates.reduce(function (previousState, _ref) {\n            var id = _ref.id,\n                data = _ref.data;\n            previousState[id] = data;\n            return previousState;\n          }, {});\n          dispatcher(newStateSlice);\n          updates = [];\n          handler = null;\n        }, timeout);\n      }\n\n      return function () {\n        clearTimeout(handler);\n        updates = [];\n        handler = null;\n      };\n    };\n  };\n  var reducer = function reducer(state, _ref2) {\n    var _extends2;\n\n    var data = _ref2.data,\n        type = _ref2.type;\n\n    switch (type) {\n      case 'add':\n        return _extends({}, state, data);\n\n      case 'update':\n        return _extends({}, state, (_extends2 = {}, _extends2[data.nodeID] = data, _extends2));\n\n      case 'remove':\n        delete state[data];\n        return _extends({}, state);\n\n      default:\n        throw new Error();\n    }\n  };\n  var useIsMounted = function useIsMounted() {\n    var isMounted = react.useRef(false);\n    react.useEffect(function () {\n      isMounted.current = true;\n      return function () {\n        return isMounted.current = false;\n      };\n    }, []);\n    return isMounted;\n  };\n  var useSafeReducer = function useSafeReducer(reducer, initialState) {\n    var _useReducer = react.useReducer(reducer, initialState),\n        state = _useReducer[0],\n        dispatch = _useReducer[1];\n\n    var isMounted = useIsMounted();\n\n    function safeDispatch(args) {\n      if (isMounted.current) {\n        dispatch(args);\n      }\n    }\n\n    return [state, safeDispatch];\n  };\n  var useGun = function useGun(Gun, opts) {\n    var _useState = react.useState(Gun(opts)),\n        gun = _useState[0];\n\n    return [gun];\n  };\n  var useGunNamespace = function useGunNamespace(gun) {\n    var _useState2 = react.useState(null),\n        namespace = _useState2[0],\n        setNamespace = _useState2[1];\n\n    if (!namespace) {\n      setNamespace(gun.user());\n    }\n\n    return [namespace];\n  };\n  var useGunKeyAuth = function useGunKeyAuth(gun, keys, triggerAuth) {\n    if (triggerAuth === void 0) {\n      triggerAuth = true;\n    }\n\n    // Will attempt to perform a login (when triggerAuth is set to true),\n    // or, if false, returns a namespaced gun node\n    var _useGunNamespace = useGunNamespace(gun),\n        namespacedGraph = _useGunNamespace[0];\n\n    var _useState3 = react.useState(false),\n        isLoggedIn = _useState3[0],\n        setIsLoggedIn = _useState3[1];\n\n    gun.on('auth', function () {\n      setIsLoggedIn(true);\n    });\n    react.useEffect(function () {\n      if (namespacedGraph && !namespacedGraph.is && keys && triggerAuth) {\n        namespacedGraph.auth(keys);\n      }\n    }, [triggerAuth, namespacedGraph, keys]);\n    return [namespacedGraph, isLoggedIn];\n  };\n  var useGunKeys = function useGunKeys(sea, initialValue) {\n    var getKeySet = function getKeySet() {\n      try {\n        return Promise.resolve(sea.pair()).then(function (pair) {\n          setKeys(pair);\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    var _useState4 = react.useState(initialValue),\n        keys = _useState4[0],\n        setKeys = _useState4[1];\n\n    if (!keys) {\n      getKeySet();\n    }\n\n    return [keys, setKeys];\n  };\n  var useGunState = function useGunState(ref, opts) {\n    if (opts === void 0) {\n      opts = {\n        appKeys: '',\n        sea: null,\n        interval: 100,\n        useOpen: false\n      };\n    }\n\n    var _opts = opts,\n        appKeys = _opts.appKeys,\n        sea = _opts.sea,\n        _opts$interval = _opts.interval,\n        interval = _opts$interval === void 0 ? 100 : _opts$interval,\n        _opts$useOpen = _opts.useOpen,\n        useOpen = _opts$useOpen === void 0 ? false : _opts$useOpen;\n\n    var _useState5 = react.useState(ref),\n        gunAppGraph = _useState5[0];\n\n    var _useSafeReducer = useSafeReducer(reducer, {}),\n        fields = _useSafeReducer[0],\n        dispatch = _useSafeReducer[1];\n\n    var handler = react.useRef(null);\n    var isMounted = useIsMounted();\n    react.useEffect(function () {\n      var debouncedHandlers = [];\n\n      if (isMounted.current) {\n        var updater = debouncedUpdates(function (data) {\n          dispatch({\n            type: 'add',\n            data: data\n          });\n        }, interval);\n\n        var gunCb = function gunCb(encryptedField, nodeID, message, event) {\n          try {\n            return Promise.resolve(decryptData(encryptedField, appKeys, sea)).then(function (decryptedField) {\n              Object.keys(decryptedField).forEach(function (key) {\n                var cleanFn = updater({\n                  id: key,\n                  data: decryptedField[key]\n                });\n                debouncedHandlers.push(cleanFn);\n              });\n\n              if (!handler.current) {\n                handler.current = event;\n              }\n            });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        };\n\n        if (useOpen) {\n          if (!gunAppGraph.open) {\n            throw new Error('Please include gun/lib/open.');\n          } else {\n            gunAppGraph.open(gunCb);\n          }\n        } else {\n          gunAppGraph.on(gunCb);\n        }\n      }\n\n      return function () {\n        if (handler.current) {\n          //cleanup gun .on listener\n          handler.current.off();\n        }\n\n        if (debouncedHandlers.length) {\n          //cleanup timeouts\n          debouncedHandlers.forEach(function (c) {\n            return c();\n          });\n        }\n      }; // We just need to set the listener once\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []); // Working with root node fields\n\n    var put = function put(data) {\n      try {\n        return Promise.resolve(encryptData(data, appKeys, sea)).then(function (encryptedData) {\n          return Promise.resolve(new Promise(function (resolve, reject) {\n            return gunAppGraph.put(encryptedData, function (ack) {\n              return ack.err ? reject(ack.err) : resolve();\n            });\n          })).then(function () {});\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    var remove = function remove(field) {\n      try {\n        return Promise.resolve(new Promise(function (resolve, reject) {\n          return gunAppGraph.put(null, function (ack) {\n            return ack.err ? reject(ack.err) : resolve();\n          });\n        })).then(function () {\n          dispatch({\n            type: 'remove',\n            data: field\n          });\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    return {\n      fields: fields,\n      put: put,\n      remove: remove\n    };\n  };\n  var useGunCollectionState = function useGunCollectionState(ref, opts) {\n    if (opts === void 0) {\n      opts = {\n        appKeys: '',\n        sea: null,\n        interval: 100,\n        useOpen: false\n      };\n    }\n\n    var _opts2 = opts,\n        appKeys = _opts2.appKeys,\n        sea = _opts2.sea,\n        _opts2$interval = _opts2.interval,\n        interval = _opts2$interval === void 0 ? 100 : _opts2$interval,\n        useOpen = _opts2.useOpen;\n\n    var _useState6 = react.useState(ref),\n        gunAppGraph = _useState6[0];\n\n    var _useSafeReducer2 = useSafeReducer(reducer, {}),\n        collection = _useSafeReducer2[0],\n        dispatch = _useSafeReducer2[1];\n\n    var handler = react.useRef(null);\n    var isMounted = useIsMounted(); // Working with Sets\n\n    react.useEffect(function () {\n      var debouncedHandlers = [];\n\n      if (isMounted.current) {\n        var updater = debouncedUpdates(function (data) {\n          dispatch({\n            type: 'add',\n            data: data\n          });\n        }, interval);\n\n        var gunCb = function gunCb(encryptedNode, nodeID, message, event) {\n          try {\n            return Promise.resolve(decryptData(encryptedNode, appKeys, sea)).then(function (item) {\n              if (item) {\n                var cleanFn = updater({\n                  id: nodeID,\n                  data: _extends({}, item, {\n                    nodeID: nodeID\n                  })\n                });\n                debouncedHandlers.push(cleanFn);\n              }\n\n              if (!handler.current) {\n                handler.current = event;\n              }\n            });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        };\n\n        if (useOpen) {\n          if (!gunAppGraph.open) {\n            throw new Error('Please include gun/lib/open.');\n          } else {\n            gunAppGraph.map().open(gunCb);\n          }\n        } else {\n          gunAppGraph.map().on(gunCb);\n        }\n      }\n\n      return function () {\n        if (handler.current) {\n          //cleanup gun .on listener\n          handler.current.off();\n        }\n\n        if (debouncedHandlers.length) {\n          //cleanup timeouts\n          debouncedHandlers.forEach(function (c) {\n            return c();\n          });\n        }\n      }; // We just need to set the listener once\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    var updateInSet = function updateInSet(nodeID, data) {\n      try {\n        return Promise.resolve(encryptData(data, appKeys, sea)).then(function (encryptedData) {\n          return Promise.resolve(new Promise(function (resolve, reject) {\n            return gunAppGraph.get(nodeID).put(encryptedData, function (ack) {\n              return ack.err ? reject(ack.err) : resolve();\n            });\n          })).then(function () {\n            dispatch({\n              type: 'update',\n              data: _extends({\n                nodeID: nodeID\n              }, data)\n            });\n          });\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    var addToSet = function addToSet(data, nodeID) {\n      try {\n        return Promise.resolve(encryptData(data, appKeys, sea)).then(function (encryptedData) {\n          var _temp = function () {\n            if (!nodeID) {\n              return Promise.resolve(new Promise(function (resolve, reject) {\n                return gunAppGraph.set(encryptedData, function (ack) {\n                  return ack.err ? reject(ack.err) : resolve();\n                });\n              })).then(function () {});\n            } else {\n              return Promise.resolve(new Promise(function (resolve, reject) {\n                return gunAppGraph.get(nodeID).put(encryptedData, function (ack) {\n                  return ack.err ? reject(ack.err) : resolve();\n                });\n              })).then(function () {});\n            }\n          }();\n\n          if (_temp && _temp.then) return _temp.then(function () {});\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    var removeFromSet = function removeFromSet(nodeID) {\n      try {\n        return Promise.resolve(new Promise(function (resolve, reject) {\n          return gunAppGraph.get(nodeID).put(null, function (ack) {\n            return ack.err ? reject(ack.err) : resolve();\n          });\n        })).then(function () {});\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    return {\n      collection: collection,\n      addToSet: addToSet,\n      updateInSet: updateInSet,\n      removeFromSet: removeFromSet\n    };\n  };\n\n  exports.debouncedUpdates = debouncedUpdates;\n  exports.decryptData = decryptData;\n  exports.encryptData = encryptData;\n  exports.reducer = reducer;\n  exports.useGun = useGun;\n  exports.useGunCollectionState = useGunCollectionState;\n  exports.useGunKeyAuth = useGunKeyAuth;\n  exports.useGunKeys = useGunKeys;\n  exports.useGunNamespace = useGunNamespace;\n  exports.useGunState = useGunState;\n  exports.useIsMounted = useIsMounted;\n  exports.useSafeReducer = useSafeReducer;\n\n})));\n//# sourceMappingURL=gundb-react-hooks.umd.js.map\n","import React, { useState, useEffect } from 'react';\nimport { useGun, useGunKeys, useGunKeyAuth } from '@altrx/gundb-react-hooks';\n\ntype KeyPair = {\n  pub: string;\n  priv: string;\n  epub: string;\n  epriv: string;\n};\n\ntype GunContextType = {\n  user;\n  login: (keys: undefined | string | KeyPair) => void;\n  logout: () => void;\n  sea;\n  appKeys: undefined | string | KeyPair;\n  isLoggedIn: boolean;\n  displayName: string;\n  Provider;\n};\n\ntype Storage = {\n  getItem: (key: string) => any;\n  setItem: (key: string, data: string) => any;\n  removeItem: (key: string) => any;\n};\n\ntype ProviderOpts = {\n  peers: [];\n  Gun;\n  sea;\n  keyFieldName: string;\n  storage: Storage;\n  [key: string]: any;\n};\n\nconst GunContext: GunContextType = React.createContext<GunContextType>({});\nGunContext.displayName = 'GunContext';\n\nconst GunProvider = ({\n  peers,\n  Gun,\n  sea,\n  keyFieldName = 'keys',\n  storage,\n  ...props\n}: ProviderOpts) => {\n  if (!sea || !Gun || !peers) {\n    throw new Error(`Provide peers, Gun and sea`);\n  }\n\n  const newGunInstance = (opts = { peers }) => {\n    return Gun(opts);\n  };\n\n  const [isReadyToAuth, setReadyToAuth] = useState('');\n  const [existingKeysStatus, setExistingKeysStatus] = useState('');\n\n  const [gun] = useGun(Gun, { peers });\n  const [appKeys, setAppKeys] = useGunKeys(sea, null);\n  const [user, isLoggedIn] = useGunKeyAuth(\n    gun,\n    appKeys,\n    isReadyToAuth === 'ready'\n  );\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      const storeKeys = async () => {\n        await storage.setItem(keyFieldName, JSON.stringify(appKeys));\n      };\n\n      storeKeys();\n    }\n  }, [isLoggedIn, appKeys]);\n\n  useEffect(() => {\n    if (existingKeysStatus === '') {\n      const getKeys = async () => {\n        const k = await storage.getItem(keyFieldName);\n        const ks = JSON.parse(k || 'null');\n        setAppKeys(ks);\n        setExistingKeysStatus(ks ? 'present' : 'notpresent');\n      };\n      getKeys();\n    }\n\n    if (isReadyToAuth === '') {\n      const getKeys = async () => {\n        const k = await storage.getItem(keyFieldName);\n        const keysPresent = !!(k || '');\n        setReadyToAuth(keysPresent ? 'ready' : '');\n      };\n      getKeys();\n    }\n  }, [\n    isLoggedIn,\n    appKeys,\n    storage,\n    keyFieldName,\n    existingKeysStatus,\n    setReadyToAuth,\n    setExistingKeysStatus,\n    setAppKeys,\n  ]);\n\n  const login = React.useCallback(\n    async (keys) => {\n      if (keys) {\n        // This function is called when the user inputs existing\n        // keys. In that case, we wanna make sure `appKeys` contains those instead\n        // of the ones that were generated by the `useGunKeys` hook.\n        setAppKeys(keys);\n      }\n      // We tell Gun we're ready to perform the authentication, either with existing\n      // keys or the ones generated by the `useGunKeys` hook.\n      setReadyToAuth('ready');\n    },\n    [setAppKeys, setReadyToAuth]\n  );\n\n  const logout = React.useCallback(() => {\n    const removeKeys = async () => {\n      await storage.removeItem(keyFieldName);\n    };\n\n    removeKeys();\n  }, []);\n\n  const value = React.useMemo(\n    () => ({ user, login, logout, sea, appKeys, isLoggedIn, newGunInstance }),\n    [login, logout, user, appKeys, isLoggedIn, newGunInstance]\n  );\n\n  return <GunContext.Provider value={value} {...props} />;\n};\n\nfunction useAuth() {\n  const context = React.useContext(GunContext);\n  if (context === undefined) {\n    throw new Error(`useAuth must be used within a GunProvider`);\n  }\n  return context;\n}\n\nexport { GunProvider, useAuth };\n"],"names":["handler","updates","dispatch","setNamespace","user","setIsLoggedIn","setKeys","getKeySet","appKeys","interval","isMounted","useOpen","data","nodeID","debouncedHandlers","encryptedData","ack","GunContext","React","createContext","displayName","GunProvider","peers","Gun","sea","keyFieldName","storage","props","Error","newGunInstance","opts","useState","isReadyToAuth","setReadyToAuth","existingKeysStatus","setExistingKeysStatus","useGun","gun","useGunKeys","setAppKeys","useGunKeyAuth","isLoggedIn","useEffect","storeKeys","setItem","JSON","stringify","getKeys","getItem","k","ks","parse","keysPresent","login","useCallback","keys","logout","removeKeys","removeItem","value","useMemo","Provider","useAuth","context","useContext","undefined"],"mappings":"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"}