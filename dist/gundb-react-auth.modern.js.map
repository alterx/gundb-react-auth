{"version":3,"file":"gundb-react-auth.modern.js","sources":["../node_modules/.pnpm/registry.npmjs.org/@altrx/gundb-react-hooks/0.9.3_react-dom@16.13.1+react@16.13.1/node_modules/@altrx/gundb-react-hooks/dist/gundb-react-hooks.umd.js","../src/index.tsx"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) :\n  (global = global || self, factory(global['@altrx/gundb-react-hooks'] = {}, global.react));\n}(this, (function (exports, react) {\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  var encryptData = function encryptData(data, keys, sea) {\n    try {\n      return Promise.resolve(keys && sea ? sea.encrypt(data, keys) : data);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var decryptData = function decryptData(data, keys, sea) {\n    try {\n      return Promise.resolve(keys && sea ? sea.decrypt(data, keys) : data);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var debouncedUpdates = function debouncedUpdates(dispatcher, timeout) {\n    if (timeout === void 0) {\n      timeout = 100;\n    }\n\n    var updates = [];\n    var handler;\n    return function (update) {\n      updates.push(update);\n\n      if (!handler) {\n        handler = setTimeout(function () {\n          var newStateSlice = updates.reduce(function (previousState, _ref) {\n            var id = _ref.id,\n                data = _ref.data;\n            previousState[id] = data;\n            return previousState;\n          }, {});\n          dispatcher(newStateSlice);\n          updates = [];\n          handler = null;\n        }, timeout);\n      }\n\n      return function () {\n        clearTimeout(handler);\n        updates = [];\n        handler = null;\n      };\n    };\n  };\n  var reducer = function reducer(state, _ref2) {\n    var _extends2;\n\n    var data = _ref2.data,\n        type = _ref2.type;\n\n    switch (type) {\n      case 'add':\n        return _extends({}, state, data);\n\n      case 'update':\n        return _extends({}, state, (_extends2 = {}, _extends2[data.nodeID] = data, _extends2));\n\n      case 'remove':\n        delete state[data];\n        return _extends({}, state);\n\n      default:\n        throw new Error();\n    }\n  };\n  var useIsMounted = function useIsMounted() {\n    var isMounted = react.useRef(false);\n    react.useEffect(function () {\n      isMounted.current = true;\n      return function () {\n        return isMounted.current = false;\n      };\n    }, []);\n    return isMounted;\n  };\n  var useSafeReducer = function useSafeReducer(reducer, initialState) {\n    var _useReducer = react.useReducer(reducer, initialState),\n        state = _useReducer[0],\n        dispatch = _useReducer[1];\n\n    var isMounted = useIsMounted();\n\n    function safeDispatch(args) {\n      if (isMounted.current) {\n        dispatch(args);\n      }\n    }\n\n    return [state, safeDispatch];\n  };\n  var useGun = function useGun(Gun, opts) {\n    var _useState = react.useState(Gun(_extends({}, opts))),\n        gun = _useState[0],\n        setGun = _useState[1];\n\n    react.useEffect(function () {\n      if (opts) {\n        setGun(Gun(_extends({}, opts)));\n      }\n    }, [Gun, opts]);\n    return gun;\n  };\n  var useGunNamespace = function useGunNamespace(gun, soul) {\n    var _useState2 = react.useState(soul ? gun.user(soul) : gun.user()),\n        namespace = _useState2[0],\n        setNamespace = _useState2[1];\n\n    react.useEffect(function () {\n      if (gun && !namespace) {\n        setNamespace(soul ? gun.user(soul) : gun.user());\n      }\n    }, [namespace, gun, soul]);\n    return namespace;\n  };\n  var useGunKeyAuth = function useGunKeyAuth(gun, keys, triggerAuth) {\n    if (triggerAuth === void 0) {\n      triggerAuth = true;\n    }\n\n    // Will attempt to perform a login (when triggerAuth is set to true),\n    // or, if false, returns a namespaced gun node\n    var namespacedGraph = useGunNamespace(gun);\n\n    var _useState3 = react.useState(false),\n        isLoggedIn = _useState3[0],\n        setIsLoggedIn = _useState3[1];\n\n    gun.on('auth', function () {\n      setIsLoggedIn(true);\n    });\n    react.useEffect(function () {\n      if (namespacedGraph && !namespacedGraph.is && keys && triggerAuth) {\n        namespacedGraph.auth(keys);\n      }\n    }, [triggerAuth, namespacedGraph, keys]);\n    return [namespacedGraph, isLoggedIn];\n  };\n  var useGunKeys = function useGunKeys(sea, existingKeys) {\n    var _useState4 = react.useState(existingKeys),\n        newKeys = _useState4[0],\n        setNewKeys = _useState4[1];\n\n    react.useEffect(function () {\n      var getKeySet = function getKeySet() {\n        try {\n          return Promise.resolve(sea.pair()).then(function (pair) {\n            setNewKeys(pair);\n          });\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      };\n\n      if (!newKeys && !existingKeys) {\n        getKeySet();\n      }\n\n      if (existingKeys) {\n        setNewKeys(existingKeys);\n      }\n    }, [existingKeys, newKeys, sea]);\n    return newKeys;\n  };\n  var useGunState = function useGunState(ref, opts) {\n    if (opts === void 0) {\n      opts = {\n        appKeys: '',\n        sea: null,\n        interval: 100,\n        useOpen: false\n      };\n    }\n\n    var _opts = opts,\n        appKeys = _opts.appKeys,\n        sea = _opts.sea,\n        _opts$interval = _opts.interval,\n        interval = _opts$interval === void 0 ? 100 : _opts$interval,\n        _opts$useOpen = _opts.useOpen,\n        useOpen = _opts$useOpen === void 0 ? false : _opts$useOpen;\n\n    var _useState5 = react.useState(ref),\n        gunAppGraph = _useState5[0];\n\n    var _useSafeReducer = useSafeReducer(reducer, {}),\n        fields = _useSafeReducer[0],\n        dispatch = _useSafeReducer[1];\n\n    var handler = react.useRef(null);\n    var isMounted = useIsMounted();\n    react.useEffect(function () {\n      var debouncedHandlers = [];\n\n      if (isMounted.current) {\n        var updater = debouncedUpdates(function (data) {\n          dispatch({\n            type: 'add',\n            data: data\n          });\n        }, interval);\n\n        var gunCb = function gunCb(encryptedField, nodeID, message, event) {\n          try {\n            return Promise.resolve(decryptData(encryptedField, appKeys, sea)).then(function (decryptedField) {\n              Object.keys(decryptedField).forEach(function (key) {\n                var cleanFn = updater({\n                  id: key,\n                  data: decryptedField[key]\n                });\n                debouncedHandlers.push(cleanFn);\n              });\n\n              if (!handler.current) {\n                handler.current = event;\n              }\n            });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        };\n\n        if (useOpen) {\n          if (!gunAppGraph.open) {\n            throw new Error('Please include gun/lib/open.');\n          } else {\n            gunAppGraph.open(gunCb);\n          }\n        } else {\n          gunAppGraph.on(gunCb);\n        }\n      }\n\n      return function () {\n        if (handler.current) {\n          //cleanup gun .on listener\n          handler.current.off();\n        }\n\n        if (debouncedHandlers.length) {\n          //cleanup timeouts\n          debouncedHandlers.forEach(function (c) {\n            return c();\n          });\n        }\n      }; // We just need to set the listener once\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []); // Working with root node fields\n\n    var put = function put(data) {\n      try {\n        return Promise.resolve(encryptData(data, appKeys, sea)).then(function (encryptedData) {\n          return Promise.resolve(new Promise(function (resolve, reject) {\n            return gunAppGraph.put(encryptedData, function (ack) {\n              return ack.err ? reject(ack.err) : resolve(data);\n            });\n          })).then(function () {});\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    var remove = function remove(field) {\n      try {\n        return Promise.resolve(new Promise(function (resolve, reject) {\n          return gunAppGraph.put(null, function (ack) {\n            return ack.err ? reject(ack.err) : resolve(field);\n          });\n        })).then(function () {\n          dispatch({\n            type: 'remove',\n            data: field\n          });\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    return {\n      fields: fields,\n      put: put,\n      remove: remove\n    };\n  };\n  var useGunCollectionState = function useGunCollectionState(ref, opts) {\n    if (opts === void 0) {\n      opts = {\n        appKeys: '',\n        sea: null,\n        interval: 100,\n        useOpen: false\n      };\n    }\n\n    var _opts2 = opts,\n        appKeys = _opts2.appKeys,\n        sea = _opts2.sea,\n        _opts2$interval = _opts2.interval,\n        interval = _opts2$interval === void 0 ? 100 : _opts2$interval,\n        useOpen = _opts2.useOpen;\n\n    var _useState6 = react.useState(ref),\n        gunAppGraph = _useState6[0];\n\n    var _useSafeReducer2 = useSafeReducer(reducer, {}),\n        collection = _useSafeReducer2[0],\n        dispatch = _useSafeReducer2[1];\n\n    var handler = react.useRef(null);\n    var isMounted = useIsMounted(); // Working with Sets\n\n    react.useEffect(function () {\n      var debouncedHandlers = [];\n\n      if (isMounted.current) {\n        var updater = debouncedUpdates(function (data) {\n          dispatch({\n            type: 'add',\n            data: data\n          });\n        }, interval);\n\n        var gunCb = function gunCb(encryptedNode, nodeID, message, event) {\n          try {\n            return Promise.resolve(decryptData(encryptedNode, appKeys, sea)).then(function (item) {\n              if (item) {\n                var cleanFn = updater({\n                  id: nodeID,\n                  data: _extends({}, item, {\n                    nodeID: nodeID\n                  })\n                });\n                debouncedHandlers.push(cleanFn);\n              }\n\n              if (!handler.current) {\n                handler.current = event;\n              }\n            });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        };\n\n        if (useOpen) {\n          if (!gunAppGraph.open) {\n            throw new Error('Please include gun/lib/open.');\n          } else {\n            gunAppGraph.map().open(gunCb);\n          }\n        } else {\n          gunAppGraph.map().on(gunCb);\n        }\n      }\n\n      return function () {\n        if (handler.current) {\n          //cleanup gun .on listener\n          handler.current.off();\n        }\n\n        if (debouncedHandlers.length) {\n          //cleanup timeouts\n          debouncedHandlers.forEach(function (c) {\n            return c();\n          });\n        }\n      }; // We just need to set the listener once\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    var updateInSet = function updateInSet(nodeID, data) {\n      try {\n        return Promise.resolve(encryptData(data, appKeys, sea)).then(function (encryptedData) {\n          return Promise.resolve(new Promise(function (resolve, reject) {\n            return gunAppGraph.get(nodeID).put(encryptedData, function (ack) {\n              return ack.err ? reject(ack.err) : resolve(data);\n            });\n          })).then(function () {\n            dispatch({\n              type: 'update',\n              data: _extends({\n                nodeID: nodeID\n              }, data)\n            });\n          });\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    var addToSet = function addToSet(data, nodeID) {\n      try {\n        return Promise.resolve(encryptData(data, appKeys, sea)).then(function (encryptedData) {\n          var _temp = function () {\n            if (!nodeID) {\n              return Promise.resolve(new Promise(function (resolve, reject) {\n                return gunAppGraph.set(encryptedData, function (ack) {\n                  return ack.err ? reject(ack.err) : resolve(data);\n                });\n              })).then(function () {});\n            } else {\n              return Promise.resolve(new Promise(function (resolve, reject) {\n                return gunAppGraph.get(nodeID).put(encryptedData, function (ack) {\n                  return ack.err ? reject(ack.err) : resolve(data);\n                });\n              })).then(function () {});\n            }\n          }();\n\n          if (_temp && _temp.then) return _temp.then(function () {});\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    var removeFromSet = function removeFromSet(nodeID) {\n      try {\n        return Promise.resolve(new Promise(function (resolve, reject) {\n          return gunAppGraph.get(nodeID).put(null, function (ack) {\n            return ack.err ? reject(ack.err) : resolve(nodeID);\n          });\n        })).then(function () {});\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    return {\n      collection: collection,\n      addToSet: addToSet,\n      updateInSet: updateInSet,\n      removeFromSet: removeFromSet\n    };\n  };\n\n  exports.debouncedUpdates = debouncedUpdates;\n  exports.decryptData = decryptData;\n  exports.encryptData = encryptData;\n  exports.reducer = reducer;\n  exports.useGun = useGun;\n  exports.useGunCollectionState = useGunCollectionState;\n  exports.useGunKeyAuth = useGunKeyAuth;\n  exports.useGunKeys = useGunKeys;\n  exports.useGunNamespace = useGunNamespace;\n  exports.useGunState = useGunState;\n  exports.useIsMounted = useIsMounted;\n  exports.useSafeReducer = useSafeReducer;\n\n})));\n//# sourceMappingURL=gundb-react-hooks.umd.js.map\n","import React, { useState, useEffect } from 'react';\nimport { useGun, useGunKeys, useGunKeyAuth } from '@altrx/gundb-react-hooks';\n\ntype KeyPair = {\n  pub: string;\n  priv: string;\n  epub: string;\n  epriv: string;\n};\n\ntype GunContextType = {\n  user;\n  login: (keys: undefined | string | KeyPair) => void;\n  logout: () => void;\n  sea;\n  appKeys: undefined | string | KeyPair;\n  isLoggedIn: boolean;\n  displayName: string;\n  Provider;\n};\n\ntype Storage = {\n  getItem: (key: string) => any;\n  setItem: (key: string, data: string) => any;\n  removeItem: (key: string) => any;\n};\n\ntype ProviderOpts = {\n  Gun;\n  sea;\n  keyFieldName: string;\n  storage: Storage;\n  gunOpts;\n  [key: string]: any;\n};\n\nconst GunContext: GunContextType = React.createContext<GunContextType>({});\nGunContext.displayName = 'GunContext';\n\nconst GunProvider = ({\n  Gun,\n  sea,\n  keyFieldName = 'keys',\n  storage,\n  gunOpts,\n  ...props\n}: ProviderOpts) => {\n  if (!sea || !Gun || !gunOpts) {\n    throw new Error(`Provide gunOpts, Gun and sea`);\n  }\n\n  const [{ isReadyToAuth, existingKeys, keyStatus }, setStatuses] = useState({\n    isReadyToAuth: '',\n    existingKeys: null,\n    keyStatus: '',\n  });\n\n  const gun = useGun(Gun, gunOpts);\n  // new keypair\n  const newKeys = useGunKeys(sea);\n  const [user, isLoggedIn] = useGunKeyAuth(\n    gun,\n    existingKeys,\n    isReadyToAuth === 'ready'\n  );\n\n  useEffect(() => {\n    if (isLoggedIn && existingKeys && keyStatus === 'new') {\n      const storeKeys = async () => {\n        await storage.setItem(keyFieldName, JSON.stringify(existingKeys));\n      };\n\n      storeKeys();\n    }\n  }, [isLoggedIn, existingKeys, keyFieldName, storage, keyStatus, user]);\n\n  useEffect(() => {\n    if (!existingKeys) {\n      const getKeys = async () => {\n        const k = await storage.getItem(keyFieldName);\n        const ks = JSON.parse(k || 'null');\n        setStatuses({\n          isReadyToAuth: 'ready',\n          existingKeys: ks,\n          keyStatus: ks ? 'existing' : 'new',\n        });\n      };\n      getKeys();\n    }\n  }, [storage, keyFieldName, setStatuses, existingKeys]);\n\n  const login = React.useCallback(\n    async (keys) => {\n      // use keys sent by the user or a new set\n      setStatuses({\n        isReadyToAuth: 'ready',\n        existingKeys: keys || newKeys,\n        keyStatus: 'new',\n      });\n    },\n    [setStatuses, newKeys]\n  );\n\n  const logout = React.useCallback(\n    (onLoggedOut) => {\n      const removeKeys = async () => {\n        await storage.removeItem(keyFieldName);\n        onLoggedOut();\n      };\n\n      removeKeys();\n    },\n    [keyFieldName, storage]\n  );\n\n  const value = React.useMemo(() => {\n    const newGunInstance = (opts = gunOpts) => {\n      return Gun(opts);\n    };\n    return {\n      gun,\n      user,\n      login,\n      logout,\n      sea,\n      appKeys: existingKeys || newKeys,\n      isLoggedIn,\n      newGunInstance,\n    };\n  }, [\n    gun,\n    user,\n    login,\n    logout,\n    sea,\n    newKeys,\n    existingKeys,\n    isLoggedIn,\n    Gun,\n    gunOpts,\n  ]);\n\n  return <GunContext.Provider value={value} {...props} />;\n};\n\nfunction useAuth() {\n  const context = React.useContext(GunContext);\n  if (context === undefined) {\n    throw new Error(`useAuth must be used within a GunProvider`);\n  }\n  return context;\n}\n\nexport { GunProvider, useAuth };\n"],"names":["handler","updates","dispatch","safeDispatch","setGun","useGunNamespace","useState","setNamespace","namespacedGraph","interval","isMounted","debouncedHandlers","ack","remove","gunAppGraph","current","GunContext","React","createContext","displayName","GunProvider","Gun","sea","keyFieldName","storage","gunOpts","props","Error","isReadyToAuth","existingKeys","keyStatus","setStatuses","gun","useGun","newKeys","useGunKeys","user","isLoggedIn","useGunKeyAuth","useEffect","storeKeys","setItem","JSON","stringify","getKeys","k","getItem","ks","parse","login","useCallback","keys","logout","onLoggedOut","removeKeys","removeItem","value","useMemo","newGunInstance","opts","appKeys","Provider","useAuth","context","useContext","undefined"],"mappings":"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"}